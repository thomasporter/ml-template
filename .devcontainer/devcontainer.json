// Copyright (C) Tom Porter
// Distributed under the MIT license (see LICENSE for details)

// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.166.1/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"build": {
		"context": "..",
		"dockerfile": "../Dockerfile",
		"target": "development"
	},

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.defaultProfile.linux": "/bin/bash",
		"terminal.integrated.scrollback": 10000,
		"python.pythonPath": "/opt/pysetup/.venv/bin/python",
		"python.languageServer": "Pylance",
		"python.formatting.provider": "black",
		"python.formatting.blackPath": "/opt/pysetup/.venv/bin/black",
		// "python.formatting.blackArgs": ["--line-length", "100"],
		"python.linting.enabled": false,
		"python.linting.pylintEnabled": false,
		// "python.linting.pylintPath": "/opt/pysetup/.venv/bin/pylint",
		// "python.linting.pylintArgs": ["--reports", "12", "--disable", "I0011"],
	    "python.testing.unittestEnabled": false,
		"python.testing.nosetestsEnabled": false,
		"python.testing.pytestEnabled": true,
		"python.testing.pytestPath": "/opt/pysetup/.venv/bin/pytest",
		"python.testing.pytestArgs": ["tests"],
		"autoDocstring.docstringFormat": "sphinx",
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"eamodio.gitlens",
		"ms-pyright.pyright",
		"ms-python.python",
		"ms-python.vscode-pylance",
		"ms-toolsai.jupyter",
		"njpwerner.autodocstring",
		"visualstudioexptteam.vscodeintellicode",
		"ms-azuretools.vscode-docker",
		"almenon.arepl"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [8888],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "JUPYTER_TOKEN=vscode jupyter lab --port=8888 --ip=0.0.0.0 --no-browser &",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--net=host" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// It needs to match the USERNAME argument specified in the Dockerfile
	"remoteUser": "standard"
}
